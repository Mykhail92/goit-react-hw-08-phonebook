{"version":3,"file":"static/js/661.5610e755.chunk.js","mappings":"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","sources":["components/Contact/Contact.styled.jsx","redux/contacts/selectors.jsx","components/Contact/Contact.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/filter.styled.jsx","components/Filter/filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ol`\n  list-style: none;\n  counter-reset: item;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  font-size: 18px;\n  counter-increment: item;\n  margin-bottom: 5px;\n  ::before {\n    margin-right: 10px;\n    content: counter(item);\n    background: #afafaf;\n    border-radius: 100%;\n    color: white;\n    width: 1.2em;\n    text-align: center;\n    display: inline-block;\n  }\n`;\n\nexport const ListText = styled.p`\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button``;\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/button';\nimport { List, ListItem, ListText } from './Contact.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { selectAllContacts, selectFilter } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\n\nexport default function Contact() {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ListText>\n            {name}: {number}\n          </ListText>\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nContact.propTypes = {\n  contacts: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  deleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 300px;\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nexport const FormLabel = styled.label``;\n\nexport const FormInput = styled.input`\n  display: block;\n  outline: 0, 5px solid black;\n  margin-top: 5px;\n  margin-bottom: 10px;\n`;\n","import { useState } from 'react';\nimport { Form, FormLabel, FormInput } from './ContactForm.styled';\nimport Button from '../Button/button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Notify } from 'notiflix';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nNotify.init({ position: 'center-top' });\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectAllContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n  const handleChekUnique = name => {\n    // console.log(contacts);\n    const isExistContact = !!contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    isExistContact && Notify.warning(name + ' is already in contacts');\n    return !isExistContact;\n  };\n\n  const handleAddContact = event => {\n    event.preventDefault();\n    if (handleChekUnique(name)) {\n      dispatch(addContact({ name, number }));\n      resetForm();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleAddContact}>\n      <FormLabel>\n        Name\n        <FormInput\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  margin-top: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  outline: 0, 5 solid black;\n  margin-top: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterLabel, FilterInput } from './filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/filter/filtersSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name:\n      <FilterInput type=\"text\" value={filter} onChange={changeFilter} />\n    </FilterLabel>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Contact from 'components/Contact/Contact';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport Filter from 'components/Filter/filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  // console.log()\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <h2>Contacts</h2>\n      <Filter />\n      <Contact />\n    </>\n  );\n}\n"],"names":["List","styled","ListItem","ListText","selectLoading","state","contacts","loading","selectFilter","filter","selectAllContacts","items","Contact","useSelector","dispatch","useDispatch","useEffect","fetchContacts","filteredContacts","normalizedFilter","toLowerCase","contact","name","includes","getFilteredContacts","map","id","number","type","onClick","deleteContact","Form","FormLabel","FormInput","ContactForm","useState","setName","setNumber","handleChange","event","target","value","onSubmit","preventDefault","isExistContact","find","Notify","handleChekUnique","addContact","onChange","pattern","title","required","position","FilterLabel","FilterInput","Filter","e","updateFilter","currentTarget","Contacts","isLoading"],"sourceRoot":""}